void dfaanalyze(struct dfa *, int);
void dfacomp(char *, size_t, struct dfa *, int);
void dfaerror(const char *);
char *dfaexec(struct dfa *, char *, char *, int, int *, int *);
void dfafree(struct dfa *);
void dfainit(struct dfa *);
void dfaparse(char *, size_t, struct dfa *);
void dfastate(int, struct dfa *, int *);
void dfasyntax(reg_syntax_t, int, int);
void fatal(const char *, int);
kwset_t kwsalloc(char *);
char *kwsexec(kwset_t, char *, size_t, struct kwsmatch *);
void kwsfree(kwset_t);
char *kwsincr(kwset_t, char *, size_t);
char *kwsprep(kwset_t);
int main(int, char **);
int re_compile_fastmap(struct re_pattern_buffer *);
const char *re_compile_pattern(const char *, size_t, struct re_pattern_buffer *);
int re_match(struct re_pattern_buffer *, const char *, int, int, struct re_registers *);
int re_match_2(struct re_pattern_buffer *, const char *, int, const char *, int, int, struct re_registers *, int);
int re_search(struct re_pattern_buffer *, const char *, int, int, int, struct re_registers *);
int re_search_2(struct re_pattern_buffer *, const char *, int, const char *, int, int, int, struct re_registers *, int);
void re_set_registers(struct re_pattern_buffer *, struct re_registers *, unsigned int, regoff_t *, regoff_t *);
reg_syntax_t re_set_syntax(reg_syntax_t);
int regcomp(regex_t *, const char *, int);
size_t regerror(int, const regex_t *, char *, size_t);
int regexec(const regex_t *, const char *, size_t, regmatch_t *, int);
void regfree(regex_t *);
char *savedir(const char *, unsigned int);
char *xmalloc(size_t);
char *xrealloc(char *, size_t);
static char *EGexecute(char *, size_t, char **);
static void Ecompile(char *, size_t);
static void Fcompile(char *, size_t);
static char *Fexecute(char *, size_t, char **);
static void Gcompile(char *, size_t);
static char **addlists(char **, char **);
static void addtok(token);
static boolean alt_match_null_string_p(unsigned char *, unsigned char *, register_info_type *);
static boolean at_begline_loc_p(const char *, const char *, reg_syntax_t);
static boolean at_endline_loc_p(const char *, const char *, reg_syntax_t);
static void atom(void);
static int bcmp_translate(const char *, const char *, int, char *);
static char *bmexec(kwset_t, char *, size_t);
static void branch(void);
static void build_state(int, struct dfa *);
static void build_state_zero(struct dfa *);
static int charclass_index(int *);
static int ck_atoi(const char *, int *);
static void closure(void);
static void clrbit(int, int *);
static boolean common_op_match_null_string_p(unsigned char **, unsigned char *, register_info_type *);
static reg_errcode_t compile_range(const char **, const char *, char *, reg_syntax_t, unsigned char *);
static char **comsubs(char *, char *);
static void copy(position_set *, position_set *);
static void copyset(int *, int *);
static void copytoks(int, int);
static char *cwexec(kwset_t, char *, size_t, struct kwsmatch *);
static void delete(position, position_set *);
static void dfamust(struct dfa *);
static char **enlist(char **, char *, size_t);
static void enqueue(struct tree *, struct trie **);
static void epsclosure(position_set *, struct dfa *);
static int equal(int *, int *);
static void error(const char *, int);
static int fillbuf(size_t, struct stats *);
static void freelist(char **);
static int grep(int, const char *, struct stats *);
static int grepbuf(char *, char *);
static int grepdir(const char *, struct stats *);
static int grepfile(const char *, struct stats *);
static boolean group_in_compile_stack(compile_stack_type, regnum_t);
static boolean group_match_null_string_p(unsigned char **, unsigned char *, register_info_type *);
static int hasevery(struct tree *, struct tree *);
static char *icatalloc(char *, char *);
static char *icpyalloc(char *);
static void ifree(char *);
static char **inboth(char **, char **);
static void init_syntax_once();
static void insert(position, position_set *);
static void insert_op1(re_opcode_t, unsigned char *, int, unsigned char *);
static void insert_op2(re_opcode_t, unsigned char *, int, int, unsigned char *);
static int install_matcher(const char *);
static int is_alnum(int);
static int is_alpha(int);
static int is_blank(int);
static int is_cntrl(int);
static int is_digit(int);
static int is_graph(int);
static int is_lower(int);
static int is_print(int);
static int is_punct(int);
static int is_space(int);
static int is_upper(int);
static int is_xdigit(int);
static char *istrstr(char *, char *);
static void kwsinit(void);
static void kwsmusts();
static token lex(void);
static int looking_at(const char *);
static void merge(position_set *, position_set *, position_set *);
static void nlscan(char *);
static void notset(int *);
static int nsubtoks(int);
static char *page_alloc(size_t, char **);
static int prepend_args(const char *, char *, char **);
static void prepend_default_options(const char *, int *, char ***);
static void print_offset_sep(off_t, int);
static void prline(char *, char *, int);
static void prpending(char *);
static void prtext(char *, char *, int *);
static int re_match_2_internal(struct re_pattern_buffer *, const char *, int, const char *, int, int, struct re_registers *, int);
static reg_errcode_t regex_compile(const char *, size_t, reg_syntax_t, struct re_pattern_buffer *);
static void regexp(int);
static int reset(int, const char *, struct stats *);
static void resetmust(must *);
static void setbit(int, int *);
static void setmatcher(const char *);
static int state_index(struct dfa *, position_set *, int, int);
static void store_op1(re_opcode_t, unsigned char *, int);
static void store_op2(re_opcode_t, unsigned char *, int, int);
static void treedelta(struct tree *, unsigned int, unsigned char *);
static void treefails(struct tree *, struct trie *, struct trie *);
static void treenext(struct tree *, struct trie **);
static int tstbit(int, int *);
static void usage(int);
static ptr_t xcalloc(size_t, size_t);
static ptr_t xmalloc_1(size_t);
static ptr_t xrealloc_1(ptr_t, size_t);
static void zeroset(int *);
